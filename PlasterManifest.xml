<?xml version="1.0" encoding="utf-8"?>
<plasterManifest
  schemaVersion="1.1"
  templateType="Project" xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1">
  <metadata>
    <name>NewPowerShellModule</name>
    <id>084e2c16-996f-445e-b63e-de73e21231bc</id>
    <version>1.0.3</version>
    <title>PlasterManifest</title>
    <description>Scaffolds the files required for a PowerShell script module.</description>
    <author>Tony Pagliaro</author>
    <tags>PowerShell, Module, ModuleManifest, Automation, DevOps</tags>
  </metadata>
  <!-- 
  Issues to fix and Items to port from New-PsModule:
  - Check for existing files and archive them before they get clobbered
  - The required modules do not populate inside the PSD1 file. 

  help:
  https://github.com/PowerShell/Plaster/blob/master/docs/en-US/about_Plaster_CreatingAManifest.help.md
  -->
  <parameters>
    <parameter  name='Name' 
                type='text' 
                prompt='Name of the module' />

    <parameter  name='Description' 
                type='text' 
                prompt='Brief description of module (required for publishing)' />

    <parameter  name='Version' 
                type='text' 
                default='0.1.0.1'
                prompt='Enter the version number of the module' />
    
    <parameter  name='Author' 
                type='user-fullname' 
                prompt="Module author's name" 
                store='text' />

    <parameter  name='Email'
                type='user-email'
                prompt='Enter your email'
                store='text' />

    <parameter  name='CompanyName' 
                type='text' 
                prompt='Name of your Company' 
                store='text' />

    <parameter  name='PowerShellVersion' 
                default='5.1' 
                type='text' 
                prompt='Minimum PowerShell version (with decimal)' />

    <parameter name='License'
              type='choice'
              default='0'
              store='text'
              prompt='Select a license for your module'>
      <choice label='&amp;MIT'
              help='Adds an MIT license file.'
              value="MIT"/>
      <choice label='&amp;None'
              help='No license specified.'
              value='None'/>
    </parameter>

    <parameter  name='SoftwareDependancy' 
                default='This module has no dependancies other than a supported Windows OS.' 
                type='text' 
                prompt='Describe any required Software Dependancies' />  

    <parameter  name='ModuleDependancy' 
                type='multichoice' 
                default='3'
                prompt='`n`nChoose any PowerShell Module Dependancies, one per line.`n`n'>
 
      <choice label='Ps&amp;DateTools'
              help="Tools for manipulation of date objects in PowerShell."
              value="PsDateTools"/>
      <choice label='Ps&amp;WinAdmin'
              help="Utilities for Windows Administrators."
              value="PsWinAdmin"/>
      <choice label='S&amp;qlServer'
              help="Cmdlets for MSSQL."
              value="SqlServer"/>
      <choice label='&amp;None'
              help="No options specified."
              value="None"/>
    </parameter>

<!-- Add more options like this... 
and remember to update the default='#' index to point to the last item

  <choice label='Ps&amp;WinAdmin'
          help="Utilities for Windows Administrators."
          value="PsWinAdmin"/>

-->

    <parameter  name='GitRepoType' 
                default='0' 
                type='choice' 
                prompt='The type of git service are you using (the empty repo should already exist)'>

      <choice label='&amp;VSTS'
              help="Azure DevOps (dev.azure.com)."
              value="VSTS"/>
      <choice label='&amp;GitHub'
              help="GitHub (github.com)."
              value="GitHub"/>
      <choice label='&amp;None'
              help="Do not sync with a repo."
              value="None"/>              
    </parameter>
<!--
  Note that the feature for conditional parameters is not yet released:
  https://github.com/PowerShellOrg/Plaster/pull/265
-->
      <parameter  name='DefaultGitBranchName' 
                default='main' 
                type='text' 
                prompt='The default/production branch name for this git repo' />  

      <parameter  name='GitRepoUri' 
                default='' 
                type='text' 
                prompt='The URL to set as git remote origin (space to skip)' />

  </parameters>
  <content>

<!-- We will sometimes want PsDateTools on our module -->
    <requireModule  name="PsDateTools" 
                    condition="${PLASTER_PARAM_ModuleDependancy} -contains 'PsDateTools'"
                    message=
"Without PsDateTools, it may take longer to work with dates in PowerShell."/>

<!-- We will sometimes want PsWinAdmin on our module -->
    <requireModule  name="PsWinAdmin" 
                    condition="${PLASTER_PARAM_ModuleDependancy} -contains 'PsWinAdmin'"
                    message=
"Without PsWinAdmin, it may take longer to do some Windows admin tasks."/>

<!-- We will sometimes want ________ on our module - ->
    <requireModule  name="_____" 
                    condition="${PLASTER_PARAM_ModuleDependancy} -contains '______'"
                    message=
"Without _______, you will not be able to ___."/>
<!- - We will sometimes want ________ on our module -->


    <message>
      Creating folder structure
      </message>
        <file source='' 
              destination='${PLASTER_PARAM_Name}'/>
        
        <file source='' 
              destination='${PLASTER_PARAM_Name}\Tests'/>

        <file source='' 
              destination='${PLASTER_PARAM_Name}\Private'/>

        <file source='' 
              destination='${PLASTER_PARAM_Name}\Public'/>              

      <message>
        Deploying common files
      </message>
        <file source='template\ModuleName.psm1' 
              destination='${PLASTER_PARAM_Name}\${PLASTER_PARAM_Name}.psm1'/>
        
        <file source='template\_gitignore' 
              destination='${PLASTER_PARAM_Name}\.gitignore'/>
        
        <file source='template\_gitattributes' 
              destination='${PLASTER_PARAM_Name}\.gitattributes'/>

        <file source='template\placeholder.ps1' 
              destination='${PLASTER_PARAM_Name}\Private\placeholder.ps1'/>

      <message>
        Creating Test files
      </message>

        <!-- <templateFile source='template\Help.Tests.ps1' 
              destination='${PLASTER_PARAM_Name}\Tests\Help.Tests.ps1'/> -->

        <!-- <templateFile source='template\Manifest.Tests.ps1' 
              destination='${PLASTER_PARAM_Name}\Tests\Manifest.Tests.ps1'/> -->

        <templateFile source='template\Meta.Tests.ps1' 
              destination='${PLASTER_PARAM_Name}\Tests\Meta.Tests.ps1'/>

        <templateFile source='template\MetaFixers.psm1' 
              destination='${PLASTER_PARAM_Name}\Tests\MetaFixers.psm1'/>

        <templateFile source='template\ModuleName.Tests.ps1' 
              destination='${PLASTER_PARAM_Name}\Tests\${PLASTER_PARAM_Name}.Tests.ps1'/>

        <file source='template\Private.Tests.ps1' 
              destination='${PLASTER_PARAM_Name}\Tests\Private.Tests.ps1'/>

      <message>
        Creating git.ps1 file
      </message>

        <templateFile source='template\git.ps1' 
                      destination='${PLASTER_PARAM_Name}\git.ps1'
                      condition='$PLASTER_PARAM_GitRepoType -ne "None"'/>

      <message>
        Creating Readme
      </message>
        <templateFile source='template\README.md' 
                      destination='${PLASTER_PARAM_Name}\README.md'/>

      <message>
        Creating Module Manifest
      </message>
      <newModuleManifest  
        destination='${PLASTER_PARAM_Name}\${PLASTER_PARAM_Name}.psd1'
        moduleVersion='$PLASTER_PARAM_Version'
        rootModule='${PLASTER_PARAM_Name}.psm1'
        author='${PLASTER_PARAM_Author}'
        companyName='$PLASTER_PARAM_CompanyName'
        description='$PLASTER_PARAM_Description'
        powerShellVersion='$PLASTER_PARAM_PowerShellVersion'
        encoding='UTF8-NoBOM'/>

      <modify path='${PLASTER_PARAM_Name}\${PLASTER_PARAM_Name}.psd1' 
              condition="$PLASTER_PARAM_ModuleDependancy -ne 'None'"
              encoding='UTF8'>
        <replace>
            <original>(?s)\#\s+?RequiredModules\s\=\s\@\(\)</original>
            <substitute expand='true'>RequiredModules=@(${PLASTER_PARAM_ModuleDependancy})</substitute>
        </replace>
      </modify>
  </content>
</plasterManifest>
